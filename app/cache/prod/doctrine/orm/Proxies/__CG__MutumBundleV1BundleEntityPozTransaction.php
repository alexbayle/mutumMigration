<?php

namespace Proxies\__CG__\Mutum\Bundle\V1Bundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class PozTransaction extends \Mutum\Bundle\V1Bundle\Entity\PozTransaction implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Mutum\\Bundle\\V1Bundle\\Entity\\PozTransaction' . "\0" . 'transactionId', '' . "\0" . 'Mutum\\Bundle\\V1Bundle\\Entity\\PozTransaction' . "\0" . 'transactionUserId', '' . "\0" . 'Mutum\\Bundle\\V1Bundle\\Entity\\PozTransaction' . "\0" . 'transactionBuyId', '' . "\0" . 'Mutum\\Bundle\\V1Bundle\\Entity\\PozTransaction' . "\0" . 'transactionPayinId', '' . "\0" . 'Mutum\\Bundle\\V1Bundle\\Entity\\PozTransaction' . "\0" . 'transactionCardId', '' . "\0" . 'Mutum\\Bundle\\V1Bundle\\Entity\\PozTransaction' . "\0" . 'transactionDatetime');
        }

        return array('__isInitialized__', '' . "\0" . 'Mutum\\Bundle\\V1Bundle\\Entity\\PozTransaction' . "\0" . 'transactionId', '' . "\0" . 'Mutum\\Bundle\\V1Bundle\\Entity\\PozTransaction' . "\0" . 'transactionUserId', '' . "\0" . 'Mutum\\Bundle\\V1Bundle\\Entity\\PozTransaction' . "\0" . 'transactionBuyId', '' . "\0" . 'Mutum\\Bundle\\V1Bundle\\Entity\\PozTransaction' . "\0" . 'transactionPayinId', '' . "\0" . 'Mutum\\Bundle\\V1Bundle\\Entity\\PozTransaction' . "\0" . 'transactionCardId', '' . "\0" . 'Mutum\\Bundle\\V1Bundle\\Entity\\PozTransaction' . "\0" . 'transactionDatetime');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (PozTransaction $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getTransactionId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getTransactionId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransactionId', array());

        return parent::getTransactionId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTransactionUserId($transactionUserId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransactionUserId', array($transactionUserId));

        return parent::setTransactionUserId($transactionUserId);
    }

    /**
     * {@inheritDoc}
     */
    public function getTransactionUserId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransactionUserId', array());

        return parent::getTransactionUserId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTransactionBuyId($transactionBuyId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransactionBuyId', array($transactionBuyId));

        return parent::setTransactionBuyId($transactionBuyId);
    }

    /**
     * {@inheritDoc}
     */
    public function getTransactionBuyId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransactionBuyId', array());

        return parent::getTransactionBuyId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTransactionPayinId($transactionPayinId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransactionPayinId', array($transactionPayinId));

        return parent::setTransactionPayinId($transactionPayinId);
    }

    /**
     * {@inheritDoc}
     */
    public function getTransactionPayinId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransactionPayinId', array());

        return parent::getTransactionPayinId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTransactionCardId($transactionCardId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransactionCardId', array($transactionCardId));

        return parent::setTransactionCardId($transactionCardId);
    }

    /**
     * {@inheritDoc}
     */
    public function getTransactionCardId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransactionCardId', array());

        return parent::getTransactionCardId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTransactionDatetime($transactionDatetime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransactionDatetime', array($transactionDatetime));

        return parent::setTransactionDatetime($transactionDatetime);
    }

    /**
     * {@inheritDoc}
     */
    public function getTransactionDatetime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransactionDatetime', array());

        return parent::getTransactionDatetime();
    }

}
