<?php

namespace Proxies\__CG__\Mutum\Bundle\V2Bundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Address extends \Mutum\Bundle\V2Bundle\Entity\Address implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Address' . "\0" . 'addrId', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Address' . "\0" . 'addrAddress', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Address' . "\0" . 'addrZip', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Address' . "\0" . 'addrCity', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Address' . "\0" . 'addrLatitude', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Address' . "\0" . 'addrLongitude', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Address' . "\0" . 'products');
        }

        return array('__isInitialized__', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Address' . "\0" . 'addrId', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Address' . "\0" . 'addrAddress', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Address' . "\0" . 'addrZip', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Address' . "\0" . 'addrCity', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Address' . "\0" . 'addrLatitude', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Address' . "\0" . 'addrLongitude', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Address' . "\0" . 'products');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Address $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setAddrId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddrId', array($id));

        return parent::setAddrId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddrId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getAddrId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddrId', array());

        return parent::getAddrId();
    }

    /**
     * {@inheritDoc}
     */
    public function getProducts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProducts', array());

        return parent::getProducts();
    }

    /**
     * {@inheritDoc}
     */
    public function setProducts($products)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProducts', array($products));

        return parent::setProducts($products);
    }

    /**
     * {@inheritDoc}
     */
    public function addProduct(\Mutum\Bundle\V2Bundle\Entity\Product $product)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProduct', array($product));

        return parent::addProduct($product);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProduct(\Mutum\Bundle\V2Bundle\Entity\Product $product)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProduct', array($product));

        return parent::removeProduct($product);
    }

    /**
     * {@inheritDoc}
     */
    public function setAddrAddress($addrAddress)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddrAddress', array($addrAddress));

        return parent::setAddrAddress($addrAddress);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddrAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddrAddress', array());

        return parent::getAddrAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddrZip($addrZip)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddrZip', array($addrZip));

        return parent::setAddrZip($addrZip);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddrZip()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddrZip', array());

        return parent::getAddrZip();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddrCity($addrCity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddrCity', array($addrCity));

        return parent::setAddrCity($addrCity);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddrCity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddrCity', array());

        return parent::getAddrCity();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddrLatitude($addrLatitude)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddrLatitude', array($addrLatitude));

        return parent::setAddrLatitude($addrLatitude);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddrLatitude()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddrLatitude', array());

        return parent::getAddrLatitude();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddrLongitude($addrLongitude)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddrLongitude', array($addrLongitude));

        return parent::setAddrLongitude($addrLongitude);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddrLongitude()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddrLongitude', array());

        return parent::getAddrLongitude();
    }

}
