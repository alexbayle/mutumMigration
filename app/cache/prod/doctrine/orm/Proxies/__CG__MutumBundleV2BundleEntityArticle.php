<?php

namespace Proxies\__CG__\Mutum\Bundle\V2Bundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Article extends \Mutum\Bundle\V2Bundle\Entity\Article implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Article' . "\0" . 'id', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Article' . "\0" . 'product', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Article' . "\0" . 'artiPrice', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Article' . "\0" . 'artiLength', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Article' . "\0" . 'artiCat', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Article' . "\0" . 'artiCaution', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Article' . "\0" . 'artiDates', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Article' . "\0" . 'artiPictures', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Article' . "\0" . 'artiState', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Article' . "\0" . 'arti_dispo');
        }

        return array('__isInitialized__', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Article' . "\0" . 'id', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Article' . "\0" . 'product', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Article' . "\0" . 'artiPrice', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Article' . "\0" . 'artiLength', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Article' . "\0" . 'artiCat', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Article' . "\0" . 'artiCaution', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Article' . "\0" . 'artiDates', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Article' . "\0" . 'artiPictures', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Article' . "\0" . 'artiState', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Article' . "\0" . 'arti_dispo');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Article $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getProduct()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProduct', array());

        return parent::getProduct();
    }

    /**
     * {@inheritDoc}
     */
    public function setProduct($product)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProduct', array($product));

        return parent::setProduct($product);
    }

    /**
     * {@inheritDoc}
     */
    public function setArtiPrice($artiPrice)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArtiPrice', array($artiPrice));

        return parent::setArtiPrice($artiPrice);
    }

    /**
     * {@inheritDoc}
     */
    public function getArtiPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArtiPrice', array());

        return parent::getArtiPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setArtiLength($artiLength)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArtiLength', array($artiLength));

        return parent::setArtiLength($artiLength);
    }

    /**
     * {@inheritDoc}
     */
    public function getArtiLength()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArtiLength', array());

        return parent::getArtiLength();
    }

    /**
     * {@inheritDoc}
     */
    public function setArtiCat(\Mutum\Bundle\V2Bundle\Entity\CategoryArticle $artiCat = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArtiCat', array($artiCat));

        return parent::setArtiCat($artiCat);
    }

    /**
     * {@inheritDoc}
     */
    public function getArtiCat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArtiCat', array());

        return parent::getArtiCat();
    }

    /**
     * {@inheritDoc}
     */
    public function setArtiCaution($artiCaution)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArtiCaution', array($artiCaution));

        return parent::setArtiCaution($artiCaution);
    }

    /**
     * {@inheritDoc}
     */
    public function getArtiCaution()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArtiCaution', array());

        return parent::getArtiCaution();
    }

    /**
     * {@inheritDoc}
     */
    public function setArtiDates($artiDates)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArtiDates', array($artiDates));

        return parent::setArtiDates($artiDates);
    }

    /**
     * {@inheritDoc}
     */
    public function getArtiDates()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArtiDates', array());

        return parent::getArtiDates();
    }

    /**
     * {@inheritDoc}
     */
    public function setArtiPictures($artiPictures)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArtiPictures', array($artiPictures));

        return parent::setArtiPictures($artiPictures);
    }

    /**
     * {@inheritDoc}
     */
    public function getArtiPictures()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArtiPictures', array());

        return parent::getArtiPictures();
    }

    /**
     * {@inheritDoc}
     */
    public function setArtiState(\Mutum\Bundle\V2Bundle\Entity\ArticleState $artiState)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArtiState', array($artiState));

        return parent::setArtiState($artiState);
    }

    /**
     * {@inheritDoc}
     */
    public function getArtiState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArtiState', array());

        return parent::getArtiState();
    }

    /**
     * {@inheritDoc}
     */
    public function setArtiDispo($arti_dispo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArtiDispo', array($arti_dispo));

        return parent::setArtiDispo($arti_dispo);
    }

    /**
     * {@inheritDoc}
     */
    public function getArtiDispo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArtiDispo', array());

        return parent::getArtiDispo();
    }

}
