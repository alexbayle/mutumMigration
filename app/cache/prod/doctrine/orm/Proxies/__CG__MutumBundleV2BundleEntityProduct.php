<?php

namespace Proxies\__CG__\Mutum\Bundle\V2Bundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Product extends \Mutum\Bundle\V2Bundle\Entity\Product implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Product' . "\0" . 'prodId', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Product' . "\0" . 'article', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Product' . "\0" . 'user', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Product' . "\0" . 'prodName', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Product' . "\0" . 'prodDesc', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Product' . "\0" . 'prodLimitation', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Product' . "\0" . 'prodWin', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Product' . "\0" . 'prodNotation', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Product' . "\0" . 'prodNbNotation', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Product' . "\0" . 'prodDateCreation', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Product' . "\0" . 'prodDeleted', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Product' . "\0" . 'address', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Product' . "\0" . 'requests', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Product' . "\0" . 'communities', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Product' . "\0" . 'v1');
        }

        return array('__isInitialized__', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Product' . "\0" . 'prodId', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Product' . "\0" . 'article', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Product' . "\0" . 'user', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Product' . "\0" . 'prodName', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Product' . "\0" . 'prodDesc', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Product' . "\0" . 'prodLimitation', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Product' . "\0" . 'prodWin', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Product' . "\0" . 'prodNotation', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Product' . "\0" . 'prodNbNotation', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Product' . "\0" . 'prodDateCreation', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Product' . "\0" . 'prodDeleted', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Product' . "\0" . 'address', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Product' . "\0" . 'requests', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Product' . "\0" . 'communities', '' . "\0" . 'Mutum\\Bundle\\V2Bundle\\Entity\\Product' . "\0" . 'v1');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Product $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setProdId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProdId', array($id));

        return parent::setProdId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getProdId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getProdId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProdId', array());

        return parent::getProdId();
    }

    /**
     * {@inheritDoc}
     */
    public function getArticle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArticle', array());

        return parent::getArticle();
    }

    /**
     * {@inheritDoc}
     */
    public function setArticle(\Mutum\Bundle\V2Bundle\Entity\Article $article)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArticle', array($article));

        return parent::setArticle($article);
    }

    /**
     * {@inheritDoc}
     */
    public function getRequests()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRequests', array());

        return parent::getRequests();
    }

    /**
     * {@inheritDoc}
     */
    public function setRequests($requests)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRequests', array($requests));

        return parent::setRequests($requests);
    }

    /**
     * {@inheritDoc}
     */
    public function addRequests(\Mutum\Bundle\V2Bundle\Entity\Request $request)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRequests', array($request));

        return parent::addRequests($request);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRequests(\Mutum\Bundle\V2Bundle\Entity\Request $request)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRequests', array($request));

        return parent::removeRequests($request);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddress', array());

        return parent::getAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddress(\Mutum\Bundle\V2Bundle\Entity\Address $address = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddress', array($address));

        return parent::setAddress($address);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', array());

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\Mutum\Bundle\V2Bundle\Entity\User $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', array($user));

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function setProdName($prodName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProdName', array($prodName));

        return parent::setProdName($prodName);
    }

    /**
     * {@inheritDoc}
     */
    public function getProdName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProdName', array());

        return parent::getProdName();
    }

    /**
     * {@inheritDoc}
     */
    public function setProdDesc($prodDesc)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProdDesc', array($prodDesc));

        return parent::setProdDesc($prodDesc);
    }

    /**
     * {@inheritDoc}
     */
    public function getProdDesc()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProdDesc', array());

        return parent::getProdDesc();
    }

    /**
     * {@inheritDoc}
     */
    public function setProdLimitation($prodLimitation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProdLimitation', array($prodLimitation));

        return parent::setProdLimitation($prodLimitation);
    }

    /**
     * {@inheritDoc}
     */
    public function getProdLimitation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProdLimitation', array());

        return parent::getProdLimitation();
    }

    /**
     * {@inheritDoc}
     */
    public function setProdWin($prodWin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProdWin', array($prodWin));

        return parent::setProdWin($prodWin);
    }

    /**
     * {@inheritDoc}
     */
    public function getProdWin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProdWin', array());

        return parent::getProdWin();
    }

    /**
     * {@inheritDoc}
     */
    public function setProdNotation($prodNotation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProdNotation', array($prodNotation));

        return parent::setProdNotation($prodNotation);
    }

    /**
     * {@inheritDoc}
     */
    public function getProdNotation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProdNotation', array());

        return parent::getProdNotation();
    }

    /**
     * {@inheritDoc}
     */
    public function setProdNbNotation($prodNbNotation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProdNbNotation', array($prodNbNotation));

        return parent::setProdNbNotation($prodNbNotation);
    }

    /**
     * {@inheritDoc}
     */
    public function getProdNbNotation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProdNbNotation', array());

        return parent::getProdNbNotation();
    }

    /**
     * {@inheritDoc}
     */
    public function setProdDateCreation($prodDateCreation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProdDateCreation', array($prodDateCreation));

        return parent::setProdDateCreation($prodDateCreation);
    }

    /**
     * {@inheritDoc}
     */
    public function getProdDateCreation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProdDateCreation', array());

        return parent::getProdDateCreation();
    }

    /**
     * {@inheritDoc}
     */
    public function setProdDeleted($prodDeleted)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProdDeleted', array($prodDeleted));

        return parent::setProdDeleted($prodDeleted);
    }

    /**
     * {@inheritDoc}
     */
    public function getProdDeleted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProdDeleted', array());

        return parent::getProdDeleted();
    }

    /**
     * {@inheritDoc}
     */
    public function getV1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getV1', array());

        return parent::getV1();
    }

    /**
     * {@inheritDoc}
     */
    public function setV1($v1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setV1', array($v1));

        return parent::setV1($v1);
    }

    /**
     * {@inheritDoc}
     */
    public function getCommunities()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommunities', array());

        return parent::getCommunities();
    }

    /**
     * {@inheritDoc}
     */
    public function setCommunities($communities)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCommunities', array($communities));

        return parent::setCommunities($communities);
    }

}
